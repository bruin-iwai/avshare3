AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  avshare3-api

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Architectures:
      - x86_64
    MemorySize: 512
    Runtime: nodejs22.x
    Timeout: 30
    Tracing: Active

Parameters:
  MyDistributionId:
    Type: String
  BucketBackend:
    Type: String
  DeletionPolicyParam:
    Type: String
    AllowedValues:
      - Delete
      - Retain
      - Snapshot
    Default: Retain

Resources:
  MyFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    DeletionPolicy: !Ref DeletionPolicyParam
    Properties:
      CodeUri: src/
      Handler: index.handler
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref BucketBackend
      Environment:
        Variables:
          BUCKET_NAME: !Ref BucketBackend
      AutoPublishAlias: current
      DeploymentPreference:
        Type: AllAtOnce
        Alarms:
          - !Ref AliasErrorMetricGreaterThanZeroAlarm
          - !Ref LatestVersionErrorMetricGreaterThanZeroAlarm
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2020
        Sourcemap: true
        EntryPoints:
          - index.ts
        External:
          - '@aws-sdk'
          - '@fastify/swagger'
          - '@fastify/swagger-ui'

  # AWS::Serverless::Function の FunctionUrlConfig ではエイリアス (Qualifier) 込みの Function URL を定義できないため
  # 明示的に AWS::Lambda::Url リソースとして宣言する
  MyFunctionCurrentUrlConfig:
    Type: AWS::Lambda::Url
    DependsOn: MyFunctionAliascurrent
    Properties:
      AuthType: AWS_IAM
      Cors:
        AllowOrigins:
          - '*'
      Qualifier: current
      TargetFunctionArn: !GetAtt MyFunction.Arn

  MyFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunctionUrl
      FunctionName: !Sub "${MyFunction}:current"
      FunctionUrlAuthType: AWS_IAM
      Principal: cloudfront.amazonaws.com
      SourceArn: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${MyDistributionId}"

  AliasErrorMetricGreaterThanZeroAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: Lambda Function Error > 0
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Resource
          Value: !Sub "${MyFunction}:current"
        - Name: FunctionName
          Value: !Ref MyFunction
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0

  LatestVersionErrorMetricGreaterThanZeroAlarm:
    Type: "AWS::CloudWatch::Alarm"
    Properties:
      AlarmDescription: Lambda Function Error > 0
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: Resource
          Value: !Sub "${MyFunction}:current"
        - Name: FunctionName
          Value: !Ref MyFunction
        - Name: ExecutedVersion
          Value: !GetAtt MyFunction.Version.Version
      EvaluationPeriods: 2
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: 0

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name: !Sub ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName: !Ref ApplicationResourceGroup
      AutoConfigurationEnabled: true

Outputs:
  MyFunction:
    Description: My Lambda Function ARN
    Value: !GetAtt MyFunction.Arn
  MyFunctionIamRole:
    Description: Implicit IAM Role created for my function
    Value: !GetAtt MyFunctionRole.Arn
  MyFunctionUrl:
    Description: My Lambda Function URL
    Value: !GetAtt MyFunctionCurrentUrlConfig.FunctionUrl
