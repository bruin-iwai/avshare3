on: push

defaults:
  run:
    shell: bash

jobs:
  test:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-node@v5
      with:
        node-version-file: .nvmrc
    - run: npm ci
    - run: npm run build --if-present --workspaces
    - run: npm run testall

  deploy_api:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [test]
    timeout-minutes: 20
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-node@v5
      with:
        node-version-file: .nvmrc
    - run: npm ci
    - uses: aws-actions/configure-aws-credentials@v5
      with:
        role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
        aws-region: ap-northeast-1
    - run: npm run build:api
    - run: npm run deploy:api
      env:
        CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
        BUCKET_BACKEND: ${{ secrets.BUCKET_BACKEND }}
    - run: npm run prune -w @avshare3/api
      env:
        FUNCTION_NAME: ${{ secrets.FUNCTION_NAME }}

  deploy_gui:
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [test]
    timeout-minutes: 20
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v5
    - uses: actions/setup-node@v5
      with:
        node-version-file: .nvmrc
    - run: npm ci
    - uses: aws-actions/configure-aws-credentials@v5
      with:
        role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
        aws-region: ap-northeast-1
    - run: npm run deploy:gui
      env:
        BUCKET_FRONTEND: ${{ secrets.BUCKET_FRONTEND }}
